@page "/account/identity/login"
@using Microsoft.AspNetCore.Components.Authorization

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card border-primary shadow-lg rounded-lg">
                <div class="card-header bg-primary text-white text-center">
                    <h2 class="mb-0">Login</h2>
                </div>
                <div class="card-body">
                    <EditForm Model="LoginModel" OnValidSubmit="LoginAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger mb-4" />

                        <div class="form-group mb-4">
                            <label for="emailAddress" class="form-label">Email Address</label>
                            <InputText id="emailAddress"
                                       @bind-Value="LoginModel.EmailAddress"
                                       class="form-control form-control-lg"
                                       placeholder="example@email.com" />
                        </div>

                        <div class="form-group mb-4">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password"
                                       @bind-Value="LoginModel.Password"
                                       type="password"
                                       class="form-control form-control-lg"
                                       placeholder="********" />
                        </div>

                        <div class="form-group mb-4">
                            <button class="btn btn-primary btn-lg w-100" type="submit">Login</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-3">
    <div class="card">
        <div class="card-body text-center text-danger">
            @Message
        </div>
    </div>
</div>
<Footer />

@code {
    public string? SelectedAction { get; set; }
    string? Message;
    public LoginModel LoginModel { get; set; } = new();

    private async Task LoginAsync()
    {
        try
        {
            var response = await _accountService.LoginAccountAsync(LoginModel);

            if (response.Flag)
            {
                var customAuthStateProvider = (CustomAuthenticationStateProvider)_customauth;

                await customAuthStateProvider.UpdateAuthenticationState(new LocalStorage
                    {
                        Token = response.Token,
                        Refresh = response.RefreshToken
                    });

                _navManager.NavigateTo("/", true);
            }
            else
            {
                Message = response.Message;
            }
        }
        catch
        {
            Message = "Sorry, an unknown error occurred.";
        }
    }

    [CascadingParameter]
    public Task<AuthenticationState>? ClientAuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (ClientAuthState != null)
            {
                var authState = await ClientAuthState;
                if (authState.User.Identity?.IsAuthenticated == true)
                {
                    _navManager.NavigateTo("/", false, true);
                }
            }
        }
        catch
        {
            // Handle initialization exceptions if needed
        }
    }
}
